"""alter table book

Revision ID: 2d2fd2398328
Revises: 50c185326733
Create Date: 2015-07-25 11:42:36.346698

"""

# revision identifiers, used by Alembic.
revision = '2d2fd2398328'
down_revision = '50c185326733'

import string
from alembic import op
import sqlalchemy as sa
import sys, os

sys.path.insert(0, os.path.abspath(os.getcwd()))

from contrivers.models import Book



def upgrade():
    book = Book.__table__

    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('book', sa.Column('edition', sa.String(), nullable=True))
    op.add_column('book', sa.Column('editors', sa.String(), nullable=True))
    op.add_column('book', sa.Column('translator', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'book', ['title', 'subtitle', 'author'])
    op.create_unique_constraint(None, 'book', ['isbn_10'])
    op.create_unique_constraint(None, 'book', ['isbn_13'])
    ### end Alembic commands ###

    #
    # isbn_10 should be varchar;  because some rows dropped a leading zero, those must be fixed
    #
    op.execute("ALTER TABLE book ALTER COLUMN isbn_10 TYPE varchar(10) USING isbn_10::varchar(10);")
    update_isbn_10 = book.update().where(sa.sql.func.length(book.c.isbn_10) < 10).values(isbn_10 = sa.sql.func.concat('0', book.c.isbn_10))
    op.execute(update_isbn_10)
    op.create_check_constraint('check_isbn_10_length', 'book', sa.sql.func.length(sa.sql.column('isbn_10')) == 10)


    #
    # isbn_13 should be varchar of length 13;  because some rows contain hyphens, we have to catch them.
    #
    op.execute("ALTER TABLE book ALTER COLUMN isbn_13 TYPE varchar(13) USING isbn_13::varchar(13);")
    update_isbn_13 = book.update().where(sa.sql.func.length(book.c.isbn_13) > 13).values(isbn_13 = sa.sql.func.replace(book.c.isbn_13, '-', ''))
    op.execute(update_isbn_13)
    op.create_check_constraint('check_isbn_13_length', 'book', sa.sql.func.length(sa.sql.column('isbn_13')) == 13)



def downgrade():
    op.execute("ALTER TABLE book ALTER COLUMN isbn_10 TYPE integer USING isbn_10::integer;")
    op.execute("ALTER TABLE book ALTER COLUMN isbn_13 TYPE varchar USING isbn_13::varchar;")
    op.drop_constraint('check_isbn_10_length', 'book')
    op.drop_constraint('check_isbn_13_length', 'book')

    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'book', type_='unique')
    op.drop_constraint(None, 'book', type_='unique')
    op.drop_constraint(None, 'book', type_='unique')
    op.drop_column('book', 'translator')
    op.drop_column('book', 'editors')
    op.drop_column('book', 'edition')
    ### end Alembic commands ###
